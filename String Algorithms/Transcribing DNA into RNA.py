# ROSALIND
# Bioinformatics Stronghold
# String Algorithms
# Transcribing DNA into RNA 
# Kofi E. Gyan
# Nov. 5th, 2016

"""
Problem
An RNA string is a string formed from the alphabet containing 'A', 'C', 'G', and 'U'.
Given a DNA string t corresponding to a coding strand, its transcribed RNA string u is formed by replacing all occurrences of 'T' in t with 'U' in u.

Given: A DNA string t having length at most 1000 nt.
Return: The transcribed RNA string of t.

Sample Dataset
GATGGAACTTGACTACGTAAATT

Sample Output
GAUGGAACUUGACUACGUAAAUU
"""

# Implement the function
def convert_RNA(t):
    master_list = [] # create an empty master list to store each nucleotide from the input string
    for i in t: # iterate through the string
        master_list.append(i) # seperate and store each nucleotide from the string in a list
    count = 0 # count to specify list indices
    for j in master_list: # iterate through the list
        if j == 'T':
            master_list[count] = 'U' # replacing all occurrences of 'T' with 'U'
        count = count + 1
    # return master_list
    print ''.join(map(str, master_list))

# Test the function
t = 'GATGGAACTTGACTACGTAAATT'
print convert_RNA(t)

p = 'GGTTCAGTCCACCAGTAAATTAGGTACAATAAGTAATCAGTGCAAGTGACCATGGATATACGCCCTCTGGTCAACGCGACTCGTTGTGGACAGTTCGAAGGATCCAAACGCTGCTCCACGAACGGCGCGTACAAAGATTTGTCGCGAGCAAAGTATGTTCTCCAATTGTCCGTGTGTAGGCTGCGCCGGGCATAATACGGGGCCCATGAGAGCCGCGAACACTAGTTCTGAACACCAACCGTACCATATTTTCACCGTTGACTTCCGGGTCCCAATCTCACTTTGGCTATACTTAGCAGAGAGTGCGGTACACTAGCGTTACGCCGCTTCGGAAGTGCTGCAGTAGGAATCGCGGACTAATTTTCGAGTAGCCTACGTTGGTGTCCATGCCGATGTCAAGGTCCCGCGAAACAGATTAGGTTTGAGCGAAGTCGGTAGGACTCAAAGAGTGGATAAGGCTAGATATGTAGTCTGCAAGCGGGTTGATCACCTCCGCAGCAGGTTACAAAATCTGTTCGCCTTTCTTCTTCAGGTTTCACGGAGCTCACTATTTTTGAAAGACTGTGAAGTATTAAACCTACCGAGATTACTTCCTTAGTTGTTTGTGCTAGTTTGAGGTGTCACGGATGCATCATATCTCTGCGGTGTGGCCTTCACGCCAGTGCCGAGATCGAATTATAATAAAAAATACGGGCCCCAGGACACGGCTTAGCCAGCGTGTCATTTATTATTTTCTCCCTATCCACGTATCTAAGCCGTCAATGTCTTCAGACCGTTCCTTTGAGGTCTCTCTGTTAAGTGGAGCGGTAGCACTTTAGAGCTATCGCACACACATAGTCCTCTCACAGGGTATTTCTTGCGTAGAGTGCTAGGGCCGCATTGTGTCTTCCCGTAGAGCCCCTCCACTGGACAAGTTGAGGAAAAGGGAGGATACGACGGGTTACAATAAAGGAGCCTTGCGTTATCTCCAAGTCGAT'
print convert_RNA(p)